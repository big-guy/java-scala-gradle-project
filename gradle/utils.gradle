buildscript {
    configureRepositories(buildscript)

    dependencies {
        classpath group: 'commons-io', name: 'commons-io', version: '2.6'
    }
}


import org.apache.commons.io.FileUtils

import java.nio.file.Files

import static groovy.io.FileType.FILES

ext.findFiles = { dir, condition = null ->

    def files = []

    if (dir.exists()) {
        dir.eachFileRecurse(FILES) { f ->
            if (condition == null || condition(f)) {
                def relativePath = dir.relativePath(f)
                files << relativePath
            }
        }
    }

    return files
}

ext.findJavaFiles = { project ->

    def javaFiles = []

    files(project.sourceSets.main.getAllSource().srcDirs).each { dir ->
        javaFiles += findFiles(dir, { f -> f.name.endsWith('.java') })
    }

    return javaFiles
}

ext.isSameFile = { dirA, dirB, relativePath ->
    def fileA = new File(dirA, relativePath)
    def fileB = new File(dirB, relativePath)
    return FileUtils.contentEquals(fileA, fileB)
}

ext.deleteSameFiles = { inputDir, outputDir ->

    def inputFiles = findFiles(inputDir)
    def identicalFiles = findFiles(outputDir, { f ->
        def relativePath = outputDir.relativePath(f)
        inputFiles.contains(relativePath) && isSameFile(inputDir, outputDir, relativePath)
    })

    identicalFiles.each { f ->
        Files.deleteIfExists(outputDir.toPath().resolve(f))
    }
}